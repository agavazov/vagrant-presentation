# nodejs app
# redis database
# haproxy + ssl
# по-добре вътрешната комуникация да е без SSL
# всички да имат шернат сторидж
# кажи че е хубаво така да се планират нещата, че машините спокойно да бъдат унищожени
# пример как се прехвърля IP адреса от haproxy
# да се винамава с изтриването на диска
# symlink & shared folders
# https://serversforhackers.com/load-balancing-with-haproxy

require 'json'
require 'etc'

configs = JSON.parse(File.read('configurations.json'))
user_config = configs[ENV['USER']]

Vagrant.configure("2") do |config|
	config.vm.box = "agavazov/cent"

	config.vm.provision "file", source: user_config["public_key"], destination: ".ssh/authorized_keys"

	config.vm.synced_folder ".", "/vagrant", type: "virtualbox"

	config.vm.provision "shell", path: "provision_global.sh"

	config.vm.provider "virtualbox" do |vb|
		vb.gui = false
		vb.customize ["modifyvm", :id, "--natdnshostresolver1", "on"]
		vb.customize ["modifyvm", :id, "--cpuexecutioncap", "85"]
		vb.customize ["modifyvm", :id, "--bioslogofadein", "off"]
		vb.customize ["modifyvm", :id, "--bioslogofadeout", "off"]
		vb.customize ["modifyvm", :id, "--bioslogodisplaytime", "0"]
		vb.customize ["modifyvm", :id, "--biosbootmenu", "disabled"]
		vb.customize ["setextradata", :id, "VBoxInternal2/SharedFoldersEnableSymlinksCreate/vagrant", 1]
	end

	config.vm.define "lb" do |lb|
		lb.vm.provider "virtualbox" do |vb|
			vb.name = "example-lb"
			vb.memory = "512"
			vb.cpus = "1"
		end

		lb.vm.hostname = "lb"
		lb.vm.network :private_network, ip: user_config["network"]["lb"]
		lb.vm.network :public_network, ip: user_config["network"]["lb_public"]

		lb.vm.provision "shell", path: "provision_install_lb.sh"
	end

	config.vm.define "web1" do |web1|
		web1.vm.provider "virtualbox" do |vb|
			vb.name = "example-web1"
			vb.memory = "1024"
			vb.cpus = "4"
		end

		web1.vm.hostname = "web1"
		web1.vm.network :private_network, ip: user_config["network"]["web1"]

		web1.vm.provision "shell", path: "provision_install_web.sh"
	end

##	config.vm.define "web2" do |web2|
##		web2.vm.provider "virtualbox" do |vb|
##			vb.name = "example-web2"
##			vb.memory = "1024"
##			vb.cpus = "4"
##		end
##
##		web2.vm.hostname = "web2"
##		web2.vm.network :private_network, ip: user_config["network"]["web2"]
##
##		web2.vm.provision "shell", path: "provision_install_web.sh"
##	end

	config.vm.define "db" do |db|
		db.vm.provider "virtualbox" do |vb|
			vb.name = "example-db"
			vb.memory = "512"
			vb.cpus = "1"
		end

		db.vm.hostname = "db"
		db.vm.network :private_network, ip: user_config["network"]["db"]

		db.vm.provision "shell", path: "provision_install_db.sh"
	end
end
